name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.8"
          - "3.7"

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: install and run tests python ${{ matrix.python-version }}
        run: |
          pip install poetry
          poetry install
          poetry run flake8
          poetry run pylint national_memographic
          poetry run mypy national_memographic
          poetry run pytest
  publish-pypi:
    runs-on: ubuntu-latest
    needs: test
    if: ${{ github.event_name == 'release' }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: publish to PyPI
        run: |
          pip install poetry
          poetry publish --build --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}
  publish-gcr:
    runs-on: ubuntu-latest
    needs: publish-pypi
    if: ${{ github.event_name == 'release' }}
    steps:
      - uses: actions/checkout@v2
      - uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCLOUD_PROJECT_ID }}
          service_account_key: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true
      - run: |
          gcloud auth configure-docker -q
          docker build -t gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/${GITHUB_REPOSITORY#*/}:${GITHUB_REF##*/} .
          docker push gcr.io/${{ secrets.GCLOUD_PROJECT_ID }}/${GITHUB_REPOSITORY#*/}:${GITHUB_REF##*/}
